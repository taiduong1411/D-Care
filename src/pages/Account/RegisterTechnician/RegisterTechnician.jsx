import React, { useState } from "react";
import { Link } from "react-router-dom";
import {
  FiMail,
  FiLock,
  FiEye,
  FiEyeOff,
  FiHome,
  FiTool,
  FiUser,
  FiPhone,
  FiMapPin,
  FiBriefcase,
  FiDollarSign,
  FiUpload,
  FiCheckCircle,
  FiAward,
} from "react-icons/fi";
import {
  FaTools,
  FaCreditCard,
  FaPercentage,
  FaMoneyBillWave,
} from "react-icons/fa";
import { MdOutlineEngineering } from "react-icons/md";
import Header from "../../../components/Header/Header";
import Footer from "../../../components/Footer/Footer";
function RegisterTechnician() {
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);
  const [selectedServices, setSelectedServices] = useState([]);
  const [agreedToTerms, setAgreedToTerms] = useState(false);
  const [formData, setFormData] = useState({
    fullName: "",
    phone: "",
    email: "",
    password: "",
    confirmPassword: "",
    idNumber: "",
    address: "",
    district: "",
    experience: "",
    bankName: "",
    bankAccount: "",
    bankOwner: "",
  });

  const serviceOptions = [
    { id: 1, name: "M√°y l·∫°nh", icon: "‚ùÑÔ∏è" },
    { id: 2, name: "T·ªß l·∫°nh", icon: "üßä" },
    { id: 3, name: "M√°y gi·∫∑t", icon: "üåä" },
    { id: 4, name: "TV", icon: "üì∫" },
    { id: 5, name: "M√°y n∆∞·ªõc n√≥ng", icon: "üî•" },
    { id: 6, name: "L√≤ vi s√≥ng", icon: "üì°" },
    { id: 7, name: "Qu·∫°t ƒëi·ªán", icon: "üí®" },
    { id: 8, name: "M√°y l·ªçc n∆∞·ªõc", icon: "üíß" },
  ];

  const districts = [
    "Qu·∫≠n 1",
    "Qu·∫≠n 2",
    "Qu·∫≠n 3",
    "Qu·∫≠n 4",
    "Qu·∫≠n 5",
    "Qu·∫≠n 6",
    "Qu·∫≠n 7",
    "Qu·∫≠n 8",
    "Qu·∫≠n 9",
    "Qu·∫≠n 10",
    "Qu·∫≠n 11",
    "Qu·∫≠n 12",
    "B√¨nh Th·∫°nh",
    "Th·ªß ƒê·ª©c",
    "G√≤ V·∫•p",
    "Ph√∫ Nhu·∫≠n",
    "T√¢n B√¨nh",
    "T√¢n Ph√∫",
    "B√¨nh T√¢n",
    "C·ªß Chi",
    "H√≥c M√¥n",
    "B√¨nh Ch√°nh",
    "Nh√† B√®",
    "C·∫ßn Gi·ªù",
  ];

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleServiceToggle = (serviceId) => {
    setSelectedServices((prev) =>
      prev.includes(serviceId)
        ? prev.filter((id) => id !== serviceId)
        : [...prev, serviceId]
    );
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (formData.password !== formData.confirmPassword) {
      alert("M·∫≠t kh·∫©u kh√¥ng kh·ªõp!");
      return;
    }
    if (selectedServices.length === 0) {
      alert("Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt d·ªãch v·ª•!");
      return;
    }
    console.log("Register technician with:", {
      ...formData,
      services: selectedServices,
    });
  };

  return (
    <>
      <Header />
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-white py-12 px-4 sm:px-6 lg:px-8">
        <div className="max-w-3xl mx-auto">
          {/* Logo */}
          <div className="text-center mb-8">
            <Link to="/" className="inline-flex items-center gap-3 group">
              <div className="relative">
                <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                  <FiHome className="text-white text-3xl" />
                </div>
                <div className="absolute -bottom-1 -right-1 w-6 h-6 bg-orange-500 rounded-full flex items-center justify-center">
                  <FiTool className="text-white text-sm" />
                </div>
              </div>
              <div className="text-left">
                <h1 className="text-3xl font-bold">
                  <span className="text-gray-800">D</span>
                  <span className="text-blue-600">Care</span>
                </h1>
                <p className="text-sm text-gray-500">
                  ChƒÉm s√≥c thi·∫øt b·ªã t·∫°i nh√†
                </p>
              </div>
            </Link>
          </div>

          {/* Register Box */}
          <div className="bg-white rounded-2xl shadow-xl p-8 space-y-6">
            {/* Header */}
            <div className="text-center">
              <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-orange-400 to-orange-600 rounded-full mb-4">
                <MdOutlineEngineering className="text-4xl text-white" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900">
                ƒêƒÉng k√Ω l√†m K·ªπ thu·∫≠t vi√™n
              </h2>
              <p className="mt-2 text-sm text-gray-600">
                Gia nh·∫≠p ƒë·ªôi ng≈© k·ªπ thu·∫≠t vi√™n KCare v√† ki·∫øm thu nh·∫≠p h·∫•p d·∫´n
              </p>
            </div>

            {/* Commission Info */}
            <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg p-6 border border-green-200">
              <div className="flex items-center gap-3 mb-4">
                <FaMoneyBillWave className="text-3xl text-green-600" />
                <h3 className="text-lg font-bold text-gray-800">
                  Ch√≠nh s√°ch hoa h·ªìng h·∫•p d·∫´n
                </h3>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="text-center">
                  <div className="text-2xl font-bold text-green-600">70%</div>
                  <p className="text-sm text-gray-600">Hoa h·ªìng m·ªói ƒë∆°n h√†ng</p>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-blue-600">500K+</div>
                  <p className="text-sm text-gray-600">
                    Thu nh·∫≠p trung b√¨nh/ng√†y
                  </p>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-orange-600">
                    Th∆∞·ªüng
                  </div>
                  <p className="text-sm text-gray-600">
                    Theo doanh s·ªë h√†ng th√°ng
                  </p>
                </div>
              </div>
            </div>

            {/* Benefits */}
            <div className="bg-blue-50 rounded-lg p-4 space-y-2">
              <p className="text-sm font-semibold text-blue-800">
                Quy·ªÅn l·ª£i khi tr·ªü th√†nh k·ªπ thu·∫≠t vi√™n:
              </p>
              <ul className="space-y-1">
                <li className="flex items-center text-xs text-blue-700">
                  <FiCheckCircle className="mr-2 text-green-600 flex-shrink-0" />
                  ƒê∆∞·ª£c h·ªó tr·ª£ k·ªπ thu·∫≠t v√† ƒë√†o t·∫°o mi·ªÖn ph√≠
                </li>
                <li className="flex items-center text-xs text-blue-700">
                  <FiCheckCircle className="mr-2 text-green-600 flex-shrink-0" />
                  Nh·∫≠n ƒë∆°n h√†ng t·ª± ƒë·ªông theo khu v·ª±c ho·∫°t ƒë·ªông
                </li>
                <li className="flex items-center text-xs text-blue-700">
                  <FiCheckCircle className="mr-2 text-green-600 flex-shrink-0" />
                  Thanh to√°n hoa h·ªìng h√†ng tu·∫ßn qua t√†i kho·∫£n ng√¢n h√†ng
                </li>
                <li className="flex items-center text-xs text-blue-700">
                  <FiCheckCircle className="mr-2 text-green-600 flex-shrink-0" />
                  B·∫£o hi·ªÉm tai n·∫°n trong qu√° tr√¨nh l√†m vi·ªác
                </li>
              </ul>
            </div>

            {/* Registration Form */}
            <form onSubmit={handleSubmit} className="space-y-6">
              {/* Personal Information */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
                  <FiUser className="text-blue-600" />
                  Th√¥ng tin c√° nh√¢n
                </h3>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label
                      htmlFor="fullName"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      H·ªç v√† t√™n <span className="text-red-500">*</span>
                    </label>
                    <div className="relative">
                      <input
                        id="fullName"
                        name="fullName"
                        type="text"
                        required
                        value={formData.fullName}
                        onChange={handleChange}
                        className="w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                        placeholder="Nguy·ªÖn VƒÉn A"
                      />
                      <FiUser className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
                    </div>
                  </div>

                  <div>
                    <label
                      htmlFor="phone"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      S·ªë ƒëi·ªán tho·∫°i <span className="text-red-500">*</span>
                    </label>
                    <div className="relative">
                      <input
                        id="phone"
                        name="phone"
                        type="tel"
                        required
                        value={formData.phone}
                        onChange={handleChange}
                        className="w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                        placeholder="0901234567"
                      />
                      <FiPhone className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
                    </div>
                  </div>

                  <div>
                    <label
                      htmlFor="email"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      Email <span className="text-red-500">*</span>
                    </label>
                    <div className="relative">
                      <input
                        id="email"
                        name="email"
                        type="email"
                        required
                        value={formData.email}
                        onChange={handleChange}
                        className="w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                        placeholder="example@email.com"
                      />
                      <FiMail className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
                    </div>
                  </div>

                  <div>
                    <label
                      htmlFor="idNumber"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      CMND/CCCD <span className="text-red-500">*</span>
                    </label>
                    <div className="relative">
                      <input
                        id="idNumber"
                        name="idNumber"
                        type="text"
                        required
                        value={formData.idNumber}
                        onChange={handleChange}
                        className="w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                        placeholder="001234567890"
                      />
                      <FiAward className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
                    </div>
                  </div>
                </div>

                <div>
                  <label
                    htmlFor="address"
                    className="block text-sm font-medium text-gray-700 mb-1">
                    ƒê·ªãa ch·ªâ <span className="text-red-500">*</span>
                  </label>
                  <div className="relative">
                    <input
                      id="address"
                      name="address"
                      type="text"
                      required
                      value={formData.address}
                      onChange={handleChange}
                      className="w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                      placeholder="123 ƒê∆∞·ªùng ABC, Ph∆∞·ªùng XYZ"
                    />
                    <FiMapPin className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
                  </div>
                </div>
              </div>

              {/* Professional Information */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
                  <FaTools className="text-blue-600" />
                  Th√¥ng tin chuy√™n m√¥n
                </h3>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label
                      htmlFor="district"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      Khu v·ª±c ho·∫°t ƒë·ªông <span className="text-red-500">*</span>
                    </label>
                    <select
                      id="district"
                      name="district"
                      required
                      value={formData.district}
                      onChange={handleChange}
                      className="w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all">
                      <option value="">Ch·ªçn qu·∫≠n/huy·ªán</option>
                      {districts.map((district) => (
                        <option key={district} value={district}>
                          {district}
                        </option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label
                      htmlFor="experience"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      Kinh nghi·ªám <span className="text-red-500">*</span>
                    </label>
                    <div className="relative">
                      <input
                        id="experience"
                        name="experience"
                        type="text"
                        required
                        value={formData.experience}
                        onChange={handleChange}
                        className="w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                        placeholder="VD: 3 nƒÉm s·ª≠a ch·ªØa ƒëi·ªán l·∫°nh"
                      />
                      <FiBriefcase className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
                    </div>
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    D·ªãch v·ª• ƒëƒÉng k√Ω <span className="text-red-500">*</span>
                  </label>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
                    {serviceOptions.map((service) => (
                      <label
                        key={service.id}
                        className={`relative flex items-center justify-center p-3 border-2 rounded-lg cursor-pointer transition-all ${
                          selectedServices.includes(service.id)
                            ? "border-blue-500 bg-blue-50"
                            : "border-gray-300 hover:border-gray-400"
                        }`}>
                        <input
                          type="checkbox"
                          className="sr-only"
                          checked={selectedServices.includes(service.id)}
                          onChange={() => handleServiceToggle(service.id)}
                        />
                        <span className="text-2xl mr-2">{service.icon}</span>
                        <span className="text-sm font-medium">
                          {service.name}
                        </span>
                        {selectedServices.includes(service.id) && (
                          <FiCheckCircle className="absolute top-1 right-1 text-blue-600" />
                        )}
                      </label>
                    ))}
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Upload ch·ª©ng ch·ªâ/b·∫±ng c·∫•p (n·∫øu c√≥)
                  </label>
                  <div className="flex items-center justify-center w-full">
                    <label className="w-full flex flex-col items-center px-4 py-6 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer hover:bg-gray-100">
                      <FiUpload className="text-3xl text-gray-400" />
                      <span className="mt-2 text-sm text-gray-500">
                        Click ƒë·ªÉ upload ho·∫∑c k√©o th·∫£ file v√†o ƒë√¢y
                      </span>
                      <span className="text-xs text-gray-400 mt-1">
                        PDF, JPG, PNG (Max 5MB)
                      </span>
                      <input
                        type="file"
                        className="hidden"
                        multiple
                        accept=".pdf,.jpg,.jpeg,.png"
                      />
                    </label>
                  </div>
                </div>
              </div>

              {/* Banking Information */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
                  <FaCreditCard className="text-blue-600" />
                  Th√¥ng tin ng√¢n h√†ng (ƒë·ªÉ nh·∫≠n hoa h·ªìng)
                </h3>

                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <label
                      htmlFor="bankName"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      T√™n ng√¢n h√†ng <span className="text-red-500">*</span>
                    </label>
                    <input
                      id="bankName"
                      name="bankName"
                      type="text"
                      required
                      value={formData.bankName}
                      onChange={handleChange}
                      className="w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                      placeholder="VD: Vietcombank"
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="bankAccount"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      S·ªë t√†i kho·∫£n <span className="text-red-500">*</span>
                    </label>
                    <input
                      id="bankAccount"
                      name="bankAccount"
                      type="text"
                      required
                      value={formData.bankAccount}
                      onChange={handleChange}
                      className="w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                      placeholder="1234567890"
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="bankOwner"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      Ch·ªß t√†i kho·∫£n <span className="text-red-500">*</span>
                    </label>
                    <input
                      id="bankOwner"
                      name="bankOwner"
                      type="text"
                      required
                      value={formData.bankOwner}
                      onChange={handleChange}
                      className="w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                      placeholder="NGUYEN VAN A"
                    />
                  </div>
                </div>
              </div>

              {/* Password */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
                  <FiLock className="text-blue-600" />
                  B·∫£o m·∫≠t t√†i kho·∫£n
                </h3>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label
                      htmlFor="password"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      M·∫≠t kh·∫©u <span className="text-red-500">*</span>
                    </label>
                    <div className="relative">
                      <input
                        id="password"
                        name="password"
                        type={showPassword ? "text" : "password"}
                        required
                        value={formData.password}
                        onChange={handleChange}
                        className="w-full pl-10 pr-10 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                        placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                      />
                      <FiLock className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
                      <button
                        type="button"
                        onClick={() => setShowPassword(!showPassword)}
                        className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600">
                        {showPassword ? <FiEyeOff /> : <FiEye />}
                      </button>
                    </div>
                  </div>

                  <div>
                    <label
                      htmlFor="confirmPassword"
                      className="block text-sm font-medium text-gray-700 mb-1">
                      X√°c nh·∫≠n m·∫≠t kh·∫©u <span className="text-red-500">*</span>
                    </label>
                    <div className="relative">
                      <input
                        id="confirmPassword"
                        name="confirmPassword"
                        type={showConfirmPassword ? "text" : "password"}
                        required
                        value={formData.confirmPassword}
                        onChange={handleChange}
                        className="w-full pl-10 pr-10 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                        placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                      />
                      <FiLock className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
                      <button
                        type="button"
                        onClick={() =>
                          setShowConfirmPassword(!showConfirmPassword)
                        }
                        className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600">
                        {showConfirmPassword ? <FiEyeOff /> : <FiEye />}
                      </button>
                    </div>
                  </div>
                </div>
              </div>

              {/* Terms */}
              <div className="flex items-start">
                <input
                  id="agree-terms"
                  type="checkbox"
                  checked={agreedToTerms}
                  onChange={(e) => setAgreedToTerms(e.target.checked)}
                  required
                  className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mt-0.5"
                />
                <label
                  htmlFor="agree-terms"
                  className="ml-2 block text-sm text-gray-700">
                  T√¥i ƒë·ªìng √Ω v·ªõi{" "}
                  <Link
                    to="/terms-technician"
                    className="text-blue-600 hover:text-blue-700 underline">
                    ƒëi·ªÅu kho·∫£n h·ª£p t√°c
                  </Link>{" "}
                  v√†{" "}
                  <Link
                    to="/commission-policy"
                    className="text-blue-600 hover:text-blue-700 underline">
                    ch√≠nh s√°ch hoa h·ªìng
                  </Link>{" "}
                  c·ªßa KCare
                </label>
              </div>

              {/* Submit Button */}
              <button
                type="submit"
                className="w-full py-3 px-4 bg-gradient-to-r from-orange-500 to-orange-600 text-white font-semibold rounded-lg hover:from-orange-600 hover:to-orange-700 transform hover:scale-[1.02] transition-all duration-200 shadow-lg">
                ƒêƒÉng k√Ω l√†m K·ªπ thu·∫≠t vi√™n
              </button>
            </form>

            {/* Login Link */}
            <div className="text-center pt-4 border-t border-gray-200">
              <p className="text-sm text-gray-600">
                ƒê√£ c√≥ t√†i kho·∫£n k·ªπ thu·∫≠t vi√™n?{" "}
                <Link
                  to="/login"
                  className="font-semibold text-blue-600 hover:text-blue-700">
                  ƒêƒÉng nh·∫≠p ngay
                </Link>
              </p>
            </div>
          </div>
        </div>
      </div>
      <Footer />
    </>
  );
}

export default RegisterTechnician;
